(((title "Quality and Reliability (QRE) Application Program Interface (API) documentation") (author "QRE team") (affiliation "LTD @ Intel Corp.") (abstract (ast "div" ("This document introduces documentation for the FRAT API functions.") () double xhtml10-transitional ())) (scheme-source-file . "/p/advda/elisp/utils/doctool/doctooloutput/layout2func.scm/") (laml-resource . "false") (documentation-commenting-style . "multi-semicolon") (default-attribute-explanation . not-provided) (source-destination-delta . "") (css-prestylesheet . "normal") (css-stylesheet . "fancy") (css-stylesheet-copying . "true") (make-dtd-manual-template . not-provided) (keep-syntactical-comment-file . "false") (manual-destination-name . "layout2func") (mirror-names-defined . not-provided) (mirror-name-prefix . not-provided) (attribute-sorting . not-provided) (scheme-source-linking . "true")) ((kind "manual-section") (section-title "Layout functions - This section contains the layout drawing functions") (section-body "") (section-id "layout-load")) ((cross-references (reference "Scheme source file" "TcfAddIDLayers" "layout2func-ep/layout2func-1.html#TcfAddIDLayers")) (kind "manual-page") (description "This adds a list of ID layers to a list of cells in the same library There is a drop down call for it It calls the single add ID layer The ID covers the bbox of the cell ") (title "TcfAddIDLayers") (form TcfAddIDLayers)) ((cross-references (reference "Scheme source file" "TcfAddIDPurposes" "layout2func-ep/layout2func-1.html#TcfAddIDPurposes")) (kind "manual-page") (description "this adds a layer with size = to bbox It will check each layer in a layout and if the lpp exists in the TF It will be added to the cell It is in the drop down under TCC_TOOLS ") (title "TcfAddIDPurposes") (form TcfAddIDPurposes)) ((cross-references (reference "Scheme source file" "TcfAddIDLayer" "layout2func-ep/layout2func-1.html#TcfAddIDLayer")) (kind "manual-page") (description "Add the given layer to match the BBox in case there are no chkBoundaries or place it over all chkBoundaries if they exist ") (title "TcfAddIDLayer") (form TcfAddIDLayer)) ((cross-references (reference "Scheme source file" "TcfCreateArrayLine" "layout2func-ep/layout2func-1.html#TcfCreateArrayLine")) (kind "manual-page") (parameters (parameter "cvId" "cellView where the output shapes will be drawned") (parameter "layerNameLPP" "LPP for the output shapes") (parameter "direction" "either \"V\" (vertical) or \"H\" (horizontal)") (parameter "offsetX" "X coordinate for the lowerLeft point from where the lines are referenced") (parameter "offsetY" "Y coordinate for the lowerLeft point from where the lines are referenced") (parameter "width" "critical dimension (CD) or width for the lines") (parameter "pitch" "pitch for the drawned lines") (parameter "bBox" "bounding box (bBox) enclosing the complete set of lines") (parameter "lstCutBBoxes" "list of bounding boxes (bBoxes) where the lines get cut") (parameter "isInvert" "if set to 't' (true), the final pattern of lines is inverted with respect to the bBox (thus the output pattern is reversed/negative)") (parameter "addVia" "if set to 't' (true), vias are added over the lines") (parameter "viaLayerLPP" "LPP for the vias") (parameter "viaSizeX" "X dimension of the vias") (parameter "viaSizeY" "Y dimension of the vias") (parameter "viaSkip" "number of lines that are skipped when creating the array of vias (orthogonal to the line direction)") (parameter "viaSpc" "spacing between vias in the same direction as the lines") (parameter "isInside" "if set to 't' (true), then the lines are drawned inside the lstCutBBoxes and are removed outside the lstCutBBoxes") (parameter "isCutStrict" "if set to 't' the lines are exactly cut on the lstCutBoxes, otherwise the lines have an spacing to the lstCutBBoxes equal to the spacing to bBox") (parameter "keepAwayDistX" "used to set a different X spacing between the lines and lstCutBBoxes (this can be different than offsetX)") (parameter "keepAwayDistY" "used to set a different Y spacing between the lines and lstCutBBoxes (this can be different than offsetY)") (parameter "linePullBack" "used to trim the lines with respect to the bBox (so lines dont have either offsetX or offsetY spacing on both sides)") (parameter "lstSegPropLst" "alternative method to define the list of cutting boxes when the lines have to be segmented.")) (examples (example "<pre>\n(TcfCreateArrayLine cvId  (list \"metal4\" (TcfGetDefaultLPPPurpose)) \"horizontal\" 0.018 0.018 0.018 0.04 (list (list 0.0 0.0) (list 0.54 0.38)) \n?addVia t\n?viaLayerLPP (list \"via5\" (TcfGetDefaultLPPPurpose))\n?viaSizeX 0.010\n?viaSizeY 0.010\n?viaSkip 0\n?viaSpc 0.01\n?lstCutBBoxes (list\n               (list (list 0.048 0.058) (list .1 .256))\n               (list (list 0.184 0.058 ) (list .25 .256))\n               )\n)\n</pre>")) (description "Creates and array of lines with user-defined cuts ") (form "TcfCreateArrayLine ( @key (cvId nil) (layerNameLPP (list \"metal0\" (TcfGetDefaultLPPPurpose))) (direction \"H\") (offsetX 0.0) (offsetY 0.0) (width 0.010) (pitch 0.020) (bBox (list (list 0.0 0.0) (list 1.0 1.0))) (lstCutBBoxes nil) (lstCutShapes nil) (isInvert nil) (addVia nil) (viaLayerLPP (list \"via0\" (TcfGetDefaultLPPPurpose))) (viaSizeX 0.010) (viaSizeY 0.010) (viaSkip 0) (viaSpc 0.010) (isInside nil) (isCutStrict nil) (keepAwayDistX nil) (keepAwayDistY nil) (linePullBack 0.0) (lstSegPropLst nil))") (returns "outputDPL") (title "TcfCreateArrayLine")) ((cross-references (reference "Scheme source file" "TcfCreateExactTermRing" "layout2func-ep/layout2func-1.html#TcfCreateExactTermRing")) (kind "manual-page") (parameters (parameter "cvId" "cellView where the output shapes will be drawned") (parameter "lstOuterShape" "list of shapes that define the outer contours of the region and the rings (ring terminates line on line with the outer countor of the region)") (parameter "WX" "X dimension of the termination ring") (parameter "WY" "Y dimension of the termination ring") (parameter "TermLineOverlapX" "overlap between the outer ring and the contour shapes in X") (parameter "TermLineOverlapY" "overlap between the outer ring and the contour shapes in Y") (parameter "addPolyPitchId" "if set to true ('t'), a poly pitch ID will be added using TcfGetPolyPitchID")) (description "Creates a termination ring with exact dimensions. ") (form "TcfCreateExactTermRing (cvId lstOuterShape WX WY @key (outputLayer (list \"polybb\" (TcfGetDefaultLPPPurpose))) (polyPitch 0.120) (lstCutShapes nil) (TermLineOverlapX 0.0) (TermLineOverlapY 0.0) (addPolyPitchId nil))") (returns "list of dbShapes forming the termination ring") (title "TcfCreateExactTermRing")) ((cross-references (reference "Scheme source file" "TcfCreateArrayLineTermRing" "layout2func-ep/layout2func-1.html#TcfCreateArrayLineTermRing")) (kind "manual-page") (parameters (parameter "cvId" "cellView where the output shapes will be drawned") (parameter "lstLineShapes" "list of dbShapes for the lines and where TcfCreateArrayLines drew these lines.") (parameter "direction" "of the input line shapes; either \"H\" (horizontal) or \"V\" (vertical)") (parameter "pitch" "pitch of the input line shapes") (parameter "lineCD" "critical dimension or width of the line shapes") (parameter "WX" "X dimension of the termination ring line") (parameter "WY" "Y dimension of the termination ring line") (parameter "outputLayer" "layer on which the ring will be drawned") (parameter "TermLineOverlapX" "X dimension of the overlap between the ring and the lines") (parameter "TermLineOverlapY" "Y dimension of the overlap between the ring and the lines") (parameter "polyPitch" "pitch of the poly, used if lines are drawned on poly") (parameter "addPolyPitchId" "if set to true ('t'), polyPitchID will be added on top of the lines and the termination ring") (parameter "disableOuterRing" "if set to true ('t'), the outer termination ring is not drawned. A termination ring will be drawned only for cut boxes inside the array of lines.")) (description "Creates a termination ring around a set of lines created by TcfCreateArrayLines function ") (form "TcfCreateArrayLineTermRing (cvId lstLineShapes direction pitch lineCD WX WY outputLayer @key (TermLineOverlapX 0.080) (TermLineOverlapY 0.080) (polyPitch 0.120) (addPolyPitchId nil) (disableOuterRing nil))") (returns "list of dbShapes forming the termination ring") (title "TcfCreateArrayLineTermRing")) ((cross-references (reference "Scheme source file" "TcfAddTermLine" "layout2func-ep/layout2func-1.html#TcfAddTermLine")) (kind "manual-page") (description "Adds TermLine to each edge of a cell - cuts plug if plug is there The length of the line is the size of the cell minus the offset x or offsety The size of the cell will be from ciId~>bBox ") (title "TcfAddTermLine") (form TcfAddTermLine)) ((cross-references (reference "Scheme source file" "TcfCreatePlugShape" "layout2func-ep/layout2func-1.html#TcfCreatePlugShape")) (kind "manual-page") (description "Creates the plug from a given set of shapes and a bounding box. ") (title "TcfCreatePlugShape") (form TcfCreatePlugShape)))