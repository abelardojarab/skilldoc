(((title "Quality and Reliability (QRE) Application Program Interface (API) documentation") (author "QRE team") (affiliation "LTD @ Intel Corp.") (abstract (ast "div" ("This document introduces documentation for the FRAT API functions.") () double xhtml10-transitional ())) (scheme-source-file . "/p/advda/elisp/utils/doctool/doctooloutput/layout1func.scm/") (laml-resource . "false") (documentation-commenting-style . "multi-semicolon") (default-attribute-explanation . not-provided) (source-destination-delta . "") (css-prestylesheet . "normal") (css-stylesheet . "fancy") (css-stylesheet-copying . "true") (make-dtd-manual-template . not-provided) (keep-syntactical-comment-file . "false") (manual-destination-name . "layout1func") (mirror-names-defined . not-provided) (mirror-name-prefix . not-provided) (attribute-sorting . not-provided) (scheme-source-linking . "true")) ((kind "manual-section") (section-title "StartLayout functions - This section contains the StartLayout related functions") (section-body "") (section-id "startlayout-load")) ((cross-references (reference "Scheme source file" "TcfBuildFunctionDPL" "layout1func-ep/layout1func-1.html#TcfBuildFunctionDPL")) (kind "manual-page") (parameters (parameter "funList" "DPL containing function names in the DPL keys and definition of the function arguments in the DPL values") (parameter "funName" "name of the function that will be looked up in the funList DPL") (parameter "line" "line from the CSV file that will be tranlated to a DPL")) (description "Builds an input DPL for layout/template-related functions ") (form "TcfBuildFunctionDPL (funList funName line)") (class "Helper Function") (returns "argDPL, a DPL can be used as input for layout/template-related functions") (title "TcfBuildFunctionDPL")) ((cross-references (reference "Scheme source file" "TcfBuildFunctionTable" "layout1func-ep/layout1func-1.html#TcfBuildFunctionTable")) (kind "manual-page") (parameters (parameter "filelist" "list containing the set of parsed lines from an input CSV file")) (description "Builds a funList DPL containing function names in the DPL keys and definition of the function arguments in the DPL values ") (form "TcfBuildFunctionDPL (funList funName line)") (class "Helper Function") (returns "funList DPL") (title "TcfBuildFunctionTable")) ((cross-references (reference "Scheme source file" "TcfStartLayoutFrameCell" "layout1func-ep/layout1func-1.html#TcfStartLayoutFrameCell")) (kind "manual-page") (parameters (parameter "csvfile" "absolute file name for the input CSV")) (description "Starts Frame Cell Layout functions Reads an input CSV file and invokes the proper cell creators ") (form "TcfStartLayoutFrameCell ( csvfile )") (paramter "sheet refers if the input file is a XSLX") (class "Main Function") (returns "t") (title "TcfStartLayoutFrameCell")) ((cross-references (reference "Scheme source file" "TcfStartLayoutGenericFrameCell" "layout1func-ep/layout1func-1.html#TcfStartLayoutGenericFrameCell")) (kind "manual-page") (description "StartLayout function for generic template script ") (title "TcfStartLayoutGenericFrameCell") (form TcfStartLayoutGenericFrameCell)) ((kind "manual-section") (section-title "Floorplanning functions - This section contains the floorplanning related functions") (section-body "") (section-id "floorplanning-load")) ((cross-references (reference "Scheme source file" "TcfClusterInstance" "layout1func-ep/layout1func-1.html#TcfClusterInstance")) (kind "manual-page") (parameters (parameter "RefName" "name of the reference object for the complete cluster instance") (parameter "RefOffsetX" "offset in X for the complete cluster instance with respect to the reference object after alignment") (parameter "RefOffsetY" "offset in Y for the complete cluster instance with respect to the reference object after alignment") (parameter "RefAlignHandle" "alignment handle for the cluster with respect to the reference object") (parameter "RefRefHandle" "reference handle on which the align handle aligns") (parameter "isRefPlaced" "is the reference object for the cluster instance placed on the layout?") (parameter "isPlaced" "is the cluster instance placed in the layout?") (parameter "Cluster" "pointer to the cluster object. Cluster is instantiated in the current TcfClusterInstance")) (description "Defines a class for layout cluster instances. Use proper class notation for UML 2.0. Greater flexibility than a DPL as properties are automatically initialized when using a class. ") (form "define TcfClusterInstance ( obj )") (class "User-defined Datatype") (title "TcfClusterInstance")) ((cross-references (reference "Scheme source file" "TcfClusterInstanceSetPlaced" "layout1func-ep/layout1func-1.html#TcfClusterInstanceSetPlaced")) (kind "manual-page") (description "Setter method for the isPlaced property ") (title "TcfClusterInstanceSetPlaced") (form TcfClusterInstanceSetPlaced)) ((cross-references (reference "Scheme source file" "TcfClusterInstanceSetDebugMode" "layout1func-ep/layout1func-1.html#TcfClusterInstanceSetDebugMode")) (kind "manual-page") (description "Setter method for the isDebugMode property ") (title "TcfClusterInstanceSetDebugMode") (form TcfClusterInstanceSetDebugMode)) ((cross-references (reference "Scheme source file" "TcfClusterInstanceSetCvId" "layout1func-ep/layout1func-1.html#TcfClusterInstanceSetCvId")) (kind "manual-page") (description "Setter method for the cvId property ") (title "TcfClusterInstanceSetCvId") (form TcfClusterInstanceSetCvId)) ((cross-references (reference "Scheme source file" "TcfClusterInstanceSetName" "layout1func-ep/layout1func-1.html#TcfClusterInstanceSetName")) (kind "manual-page") (description "Setter method for the InstanceName property ") (title "TcfClusterInstanceSetName") (form TcfClusterInstanceSetName)) ((cross-references (reference "Scheme source file" "TcfClusterInstanceSetAlignToPrev" "layout1func-ep/layout1func-1.html#TcfClusterInstanceSetAlignToPrev")) (kind "manual-page") (description "Setter method for the AlignToPrev property ") (title "TcfClusterInstanceSetAlignToPrev") (form TcfClusterInstanceSetAlignToPrev)) ((cross-references (reference "Scheme source file" "TcfFloorplanCluster" "layout1func-ep/layout1func-1.html#TcfFloorplanCluster")) (kind "manual-page") (parameters (parameter "ClusterName" "name of the cluster") (parameter "ClusterLibrary" "library name for the cluster") (parameter "isSeparateCv" "if set to true ('t'), then the cluster is built as a separate cell with name ClusterName on libray ClusterLibrary") (parameter "isRoot" "if set to true ('t'), the cluster is the root cell of the hierarchy tree") (parameter "isLeaf" "if set to true ('t'), the cluster is bottom of the hierarchy tree (e.g. a hand-drawn or unit layout)") (parameter "isBaseACell" "if set to true ('t'), the base of the cluster is a cell (thus the base of the cluster can be placed as an instance in the cluster)")) (examples (example "<pre>\n(foreachs cellstring celllist\n         (setq IndDPL (list nil))\n         (setq IndividualCell (parseString cellstring \".\"))\n         (putprop IndDPL (nth 0 IndividualCell) 'LibraryName)\n         (putprop IndDPL (nth 1 IndividualCell) 'CellName)\n         (putprop IndDPL (nth 2 IndividualCell) 'Rotation)\n         (putprop IndDPL (nth 3 IndividualCell) 'alignHandle)\n         (putprop IndDPL (quotient (atof (nth 4 IndividualCell)) 1000) 'xSep)\n         (putprop IndDPL (quotient (atof (nth 5 IndividualCell)) 1000) 'ySep)\n         (putprop IndDPL (nth 6 IndividualCell) 'refObj)\n         (putprop IndDPL (nth 7 IndividualCell) 'refHandle)\n         (setq C (makeInstance 'TcfFloorplanCluster\n                               ?ClusterName (symbolToString (concat IndDPL->CellName iteration))\n                               ?isBaseACell nil\n                               ?isSeparateCv nil\n                               ?isLeaf t\n                               ?isRoot nil\n                               ))\n         (TcfFloorplanClusterSetBase C IndDPL->CellName IndDPL->LibraryName nil IndDPL->xSep IndDPL->ySep IndDPL->Rotation)\n         (setq I (makeInstance 'TcfClusterInstance ?RefName IndDPL->refObj ?RefOffsetX IndDPL->xSep ?RefOffsetY IndDPL->ySep ?RefAlignHandle IndDPL->alignHandle ?RefRefHandle IndDPL->refHandle ?isRefPlaced t ?isPlaced nil ?Cluster C))\n         (TcfFloorplanAddClusterToCluster F I)\n         (setq iteration iteration+1)\n         ) ;; foreach\n</pre>")) (description "Defines a class for the cluster structure (cluster instance is different than cluster structure). Use proper class notation for UML 2.0. Greater flexibility than a DPL as properties are automatically initialized when using a class. ") (form "define TcfFloorplanCluster ( obj )") (class "User-defined Datatype") (title "TcfFloorplanCluster")) ((cross-references (reference "Scheme source file" "TcfFloorplanClusterGetName" "layout1func-ep/layout1func-1.html#TcfFloorplanClusterGetName")) (kind "manual-page") (parameters (parameter "obj" "pointer to a cluster object")) (description "Getter method for the TcfFloorplanCluster datatype. Gets ClusterName of the cluster. ") (form "TcfFloorplanClusterGetName ( (obj TcfFloorplanCluster) )") (returns "ClusterName") (title "TcfFloorplanClusterGetName")) ((cross-references (reference "Scheme source file" "TcfFloorplanClusterSetSize" "layout1func-ep/layout1func-1.html#TcfFloorplanClusterSetSize")) (kind "manual-page") (parameters (parameter "obj" "pointer to a cluster object") (parameter "lstSize" "list containing the pair of cluster dimensions (X dimension, Y dimension)")) (description "Setter method for the TcfFloorplanCluster datatype. Sets the dimensions of a cluster in the case the cluster base cell is not specified. ") (form "TcfFloorplanClusterSetSize ( (obj TcfFloorplanCluster) lstSize )") (returns "t") (title "TcfFloorplanClusterSetSize")) ((cross-references (reference "Scheme source file" "TcfFloorplanClusterSetRoot" "layout1func-ep/layout1func-1.html#TcfFloorplanClusterSetRoot")) (kind "manual-page") (parameters (parameter "obj" "pointer to a cluster object") (parameter "root" "either true ('t') or false ('nil')")) (description "Setter method for the TcfFloorplanCluster datatype. Sets the value of the 'isRoot' property ") (form "TcfFloorplanClusterSetRoot ( (obj TcfFloorplanCluster) root)") (title "TcfFloorplanClusterSetRoot")) ((cross-references (reference "Scheme source file" "TcfFloorplanClusterSetBase" "layout1func-ep/layout1func-1.html#TcfFloorplanClusterSetBase")) (kind "manual-page") (description "define ") (title "TcfFloorplanClusterSetBase") (form TcfFloorplanClusterSetBase)) ((cross-references (reference "Scheme source file" "TcfFloorplanClusterPlaceBase" "layout1func-ep/layout1func-1.html#TcfFloorplanClusterPlaceBase")) (kind "manual-page") (description "define ") (title "TcfFloorplanClusterPlaceBase") (form TcfFloorplanClusterPlaceBase)) ((cross-references (reference "Scheme source file" "TcfFloorplanClusterPlaceBase" "layout1func-ep/layout1func-1.html#TcfFloorplanClusterPlaceBase")) (kind "manual-page") (description "Places the base instance that will be used as reference in the cluster. ") (title "TcfFloorplanClusterPlaceBase") (form TcfFloorplanClusterPlaceBase)) ((cross-references (reference "Scheme source file" "TcfFloorplanClusterPlace" "layout1func-ep/layout1func-1.html#TcfFloorplanClusterPlace")) (kind "manual-page") (description "define ") (title "TcfFloorplanClusterPlace") (form TcfFloorplanClusterPlace)) ((cross-references (reference "Scheme source file" "TcfFloorplanClusterPlace" "layout1func-ep/layout1func-1.html#TcfFloorplanClusterPlace")) (kind "manual-page") (description "define ") (title "TcfFloorplanClusterPlace") (form TcfFloorplanClusterPlace)) ((cross-references (reference "Scheme source file" "TcfPlaceInstanceInCluster" "layout1func-ep/layout1func-1.html#TcfPlaceInstanceInCluster")) (kind "manual-page") (description "Place instance in a cluster ") (title "TcfPlaceInstanceInCluster") (form TcfPlaceInstanceInCluster)) ((cross-references (reference "Scheme source file" "TcfFloorplanAddClusterToCluster" "layout1func-ep/layout1func-1.html#TcfFloorplanAddClusterToCluster")) (kind "manual-page") (description "when we add cluster to another cluster, the cluster instance is unique but the cluster structure can be shared among many instances... ") (title "TcfFloorplanAddClusterToCluster") (form TcfFloorplanAddClusterToCluster)) ((cross-references (reference "Scheme source file" "TcfSCRIBEInitModuleAssembler" "layout1func-ep/layout1func-1.html#TcfSCRIBEInitModuleAssembler")) (kind "manual-page") (description "We will add here the core functions for the Assembler cell ") (title "TcfSCRIBEInitModuleAssembler") (form TcfSCRIBEInitModuleAssembler)) ((cross-references (reference "Scheme source file" "TcfSCRIBECreateClusterModuleAssembler" "layout1func-ep/layout1func-1.html#TcfSCRIBECreateClusterModuleAssembler")) (kind "manual-page") (description "define ") (title "TcfSCRIBECreateClusterModuleAssembler") (form TcfSCRIBECreateClusterModuleAssembler)) ((cross-references (reference "Scheme source file" "TcfSCRIBEAddToClusterModuleAssembler" "layout1func-ep/layout1func-1.html#TcfSCRIBEAddToClusterModuleAssembler")) (kind "manual-page") (description "define ") (title "TcfSCRIBEAddToClusterModuleAssembler") (form TcfSCRIBEAddToClusterModuleAssembler)) ((cross-references (reference "Scheme source file" "TcfSCRIBEPlaceClusterModuleAssembler" "layout1func-ep/layout1func-1.html#TcfSCRIBEPlaceClusterModuleAssembler")) (kind "manual-page") (description "define ") (title "TcfSCRIBEPlaceClusterModuleAssembler") (form TcfSCRIBEPlaceClusterModuleAssembler)) ((kind "manual-section") (section-title "Frame building functions - This section contains the beard/blank/container/corner letter frame building functions") (section-body "") (section-id "framebuildingfunctions")) ((cross-references (reference "Scheme source file" "TcfCreateFrameSide" "layout1func-ep/layout1func-1.html#TcfCreateFrameSide")) (kind "manual-page") (description "private function declaration ") (title "TcfCreateFrameSide") (form TcfCreateFrameSide)) ((cross-references (reference "Scheme source file" "TcfCreateContourFrame" "layout1func-ep/layout1func-1.html#TcfCreateContourFrame")) (kind "manual-page") (parameters (parameter "contourString" "string specifying the contour of the region around which a frame will be placed") (parameter "type" "either \"blank\", \"container\" or \"beard\"") (parameter "lowerXAlign" "") (parameter "lowerYAlign" "") (parameter "innerLayers" "") (parameter "outerLayers" "") (parameter "processName" "")) (description "Creates a contour frame for a given contour string (e.g. \"W10 N10 E10 S10\") ") (returns "t") (title "TcfCreateContourFrame") (form TcfCreateContourFrame)) ((cross-references (reference "Scheme source file" "TcfCreateInstance" "layout1func-ep/layout1func-1.html#TcfCreateInstance")) (kind "manual-page") (description "Generic templates ") (title "TcfCreateInstance") (form TcfCreateInstance)) ((cross-references (reference "Scheme source file" "TcfFrameCellLocationReflect" "layout1func-ep/layout1func-1.html#TcfFrameCellLocationReflect")) (kind "manual-page") (description "define ") (title "TcfFrameCellLocationReflect") (form TcfFrameCellLocationReflect)))